{"version":3,"sources":["Nav.js","App.js","Create.js","SinglePost.js","UpdatePost.js","Routes.js","index.js"],"names":["Nav","className","to","App","useState","posts","setPosts","fetchPosts","axios","get","process","then","response","console","log","data","catch","error","alert","useEffect","deletePost","slug","delete","message","map","post","i","style","borderBottom","title","content","substring","user","Date","createdAt","toLocaleString","onClick","window","confirm","_id","Create","state","setState","handleChange","name","event","target","value","onSubmit","preventDefault","onChange","type","placeholder","required","SinglePost","props","setPost","match","params","UpdatePost","handleSubmit","put","Routes","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f18f76c.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Nav = () => (\n    <nav>\n      <ul className=\"nav nav-tabs\">\n        <li className=\"nav-item pr-3 pt-3 pb-3\">\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li className=\"nav-item pr-3 pt-3 pb-3\">\n          <Link to=\"/create\">Create</Link>\n        </li>\n      </ul>\n    </nav>\n);\n\nexport default Nav;\n","import React, {useState, useEffect} from 'react';\nimport Nav from './Nav';\nimport {Link} from 'react-router-dom';\n// Promise based http client for Node.js\nimport axios from 'axios';\n// Arrow function: Parenthesis will word only with one statement otherwise we need to use brackets.\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n\n  const fetchPosts = () => {\n    axios\n      .get(`${process.env.REACT_APP_API}/posts`)\n      .then(response => {\n        console.log(response)\n        setPosts(response.data)\n      })\n      .catch(error => alert('Error fetching posts'));\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  },[]);\n\n  const deleteConfirm = slug => {\n    let answer = window.confirm('Are you sure you want to delete this post?');\n    if (answer) {\n      deletePost(slug);\n    }\n  };\n\n  const deletePost = slug => {\n    //console.log('delete', slug, ' post');\n    axios.delete(`${process.env.REACT_APP_API}/post/${slug}`)\n    .then(response => {\n      alert(response.data.message);\n      fetchPosts();\n    })\n    .catch(error => alert('Error deleting post'));\n  };\n\n  return (\n    // pb -> Use the padding only at the botto m\n    <div className=\"container pb-5\">\n      <Nav />\n      <br />\n      <h1>MERN CRUD</h1>\n      <br />\n      {posts.map((post, i) => (\n\n        <div className=\"row\" key={post._id} style={{borderBottom: '1px solid silver'}} >\n          <div className=\"col pt-3 pb-2\">\n            <div className = \"row\">\n              <div className = \"col-md-10\">\n\n                <Link to={`/post/${post.slug}`}>\n                  <h2>{post.title}</h2>\n                </Link>\n\n                <p className=\"lead\">{post.content.substring(0, 100)}</p>\n                <p>\n                  Author <span className=\"badge\">{post.user}</span> Published on{''}\n                  <span className = \"badge\">{new Date(post.createdAt).toLocaleString()}</span>\n                </p>\n              </div>\n              <div className = \"col-md-2\">\n                <Link to={`/post/update/${post.slug}`} className=\"btn btn-sm btn-outline-warning\">\n                  Update\n                </Link>\n                <button\n                  onClick={() => deleteConfirm(post.slug)}\n                  className=\"btn btn-sm btn-outline-danger ml-1\">\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n      ))}\n      <br />\n      {/* Test - Show the posts client side by usin JSON format */}\n      {/* {JSON.stringify(posts)} */}\n    </div>\n  );\n};\n\nexport default App;\n","import React, {useState} from 'react';\nimport axios from 'axios';\nimport Nav from './Nav';\n\n\n// Arrow function: Parenthesis will word only with one statement otherwise we need to use brackets.\nconst Create = () => {\n\n  // This will allow react to control all the HTML components\n  // state\n  const [state, setState] = useState({\n      title: '',\n      content: '',\n      user: ''\n  });\n\n  // destructure values from state\n  const {title, content, user} = state;\n\n  // First way : Arrow function\n  // Create the event handler function\n  // We add a function (an anonymous function) inside another function (the handleChange function)\n  const handleChange = (name) => (event) => {\n    // Used to check output inside the console of the browser\n    // console.log('name', name, 'event', event);\n    setState({...state, [name]: event.target.value});\n  };\n\n  // Old school function\n  /*\n  function handleChange(name) {\n    return function(event){\n      setState({...state, [name]: event.target.value });\n    };\n  }\n  */\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    /*console.table({title, content, user});*/\n    axios\n      .post(`${process.env.REACT_APP_API}/post`, { title, content, user})\n      .then(response => {\n        console.log(response);\n        //empty state\n        setState({...state, title: '', content: '', user: ''});\n        //show success alert\n        alert(`Post titled ${response.data.title} is created`);\n      })\n      .catch(error => {\n        console.log(error.response);\n        alert(error.response.data.error);\n      });\n  };\n\n\n  return (\n    <div className=\"container pb-5\">\n      {/* Add the navigation bar */}\n      <Nav />\n      <br/>\n      <h1>CREATE POST</h1>\n      {/* Second way to show state: Display state information directly inside our /create page */}\n      {/* {JSON.stringify(state)} */}\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label className=\"text-muted\">Title</label>\n          {/*<input value={state.title} type=\"text\" className=\"form-control\" placeholder=\"Post title\" required /> --\n          Shorter syntax allowed thanks to state destructuration\n          Add event handler to handle any change made on the component */}\n          <input\n            onChange={handleChange('title')}\n            value={title}\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Post title\"\n            required />\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"text-muted\">Content</label>\n          {/* <input value={state.content} type=\"text\" className=\"form-control\" placeholder=\"Write something\" required /> */}\n          <textarea onChange={handleChange('content')} value={content} type=\"text\" className=\"form-control\" placeholder=\"Post title\" required />\n\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"text-muted\">User</label>\n          {/* <input value={state.user} type=\"text\" className=\"form-control\" placeholder=\"Your name\" required /> */}\n          <input onChange={handleChange('user')} value={user} type=\"text\" className=\"form-control\" placeholder=\"Post title\" required />\n\n        </div>\n\n        <div>\n          <button className=\"btn btn-primary\">Create</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Create;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Nav from './Nav';\n\nconst SinglePost = (props) => {\n  const [post, setPost] = useState('');\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_API}/post/${props.match.params.slug}`)\n      .then(response => setPost(response.data))\n      .catch(error => alert('Error loading single post'));\n  }, []);\n\n  return (\n    // pb -> Use the padding only at the botto m\n    <div className=\"container pb-5\">\n      <Nav />\n      <br />\n      {/* Test */}\n      {/*<h1>{JSON.stringify(post)}</h1>*/}\n      <h1>{post.title}</h1>\n      <p className=\"lead\">{post.content}</p>\n      <p>\n        Author <span className=\"badge\">{post.user}</span> Published on{''}\n        <span className = \"badge\">{new Date(post.createdAt).toLocaleString()}</span>\n      </p>\n    </div>\n  );\n};\n\nexport default SinglePost;\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Nav from './Nav';\n\nconst UpdatePost = (props) => {\n  const [state, setState] = useState({\n    title: '',\n    content: '',\n    slug: '',\n    user: ''\n  });\n\n  const { title, content, slug, user } = state;\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_API}/post/${props.match.params.slug}`)\n      .then(response => {\n        const {title, content, slug, user} = response.data\n        setState({...state, title, content, slug, user});\n      })\n      .catch(error => alert('Error updating post'));\n  }, []);\n\n  /* Code from the Create.js client side reuseds */\n  /* No change needed for the handleChange function */\n  const handleChange = (name) => (event) => {\n    // Used to check output inside the console of the browser\n    // console.log('name', name, 'event', event);\n    setState({...state, [name]: event.target.value});\n  };\n\n  // Old school function\n  /*\n  function handleChange(name) {\n    return function(event){\n      setState({...state, [name]: event.target.value });\n    };\n  }\n  */\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    /*console.table({title, content, user});*/\n    axios\n      .put(`${process.env.REACT_APP_API}/post/${slug}`, { title, content, user})\n      .then(response => {\n        console.log(response);\n        const {title, content, slug, user} = response.data\n        //empty state\n        setState({...state, title, content , user });\n        //show success alert\n        alert(`Post titled ${title} is updated`);\n      })\n      .catch(error => {\n        console.log(error.response);\n        alert(error.response.data.error);\n      });\n  };\n\n  const showUpdateForm = () =>(\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Title</label>\n        {/*<input value={state.title} type=\"text\" className=\"form-control\" placeholder=\"Post title\" required /> --\n        Shorter syntax allowed thanks to state destructuration\n        Add event handler to handle any change made on the component */}\n        <input\n          onChange={handleChange('title')}\n          value={title}\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Post title\"\n          required />\n      </div>\n\n      <div className=\"form-group\">\n        <label className=\"text-muted\">Content</label>\n        {/* <input value={state.content} type=\"text\" className=\"form-control\" placeholder=\"Write something\" required /> */}\n        <textarea onChange={handleChange('content')} value={content} type=\"text\" className=\"form-control\" placeholder=\"Post title\" required />\n\n      </div>\n\n      <div className=\"form-group\">\n        <label className=\"text-muted\">User</label>\n        {/* <input value={state.user} type=\"text\" className=\"form-control\" placeholder=\"Your name\" required /> */}\n        <input onChange={handleChange('user')} value={user} type=\"text\" className=\"form-control\" placeholder=\"Post title\" required />\n\n      </div>\n\n      <div>\n        <button className=\"btn btn-primary\">Update</button>\n      </div>\n    </form>\n  )\n\n  return (\n    // pb -> Use the padding only at the botto m\n    <div className=\"container pb-5\">\n      <Nav />\n      <br />\n      {/* Test */}\n      {/*<h1>{JSON.stringify(post)}</h1>*/}\n      <h1>UPDATE POST</h1>\n      {showUpdateForm()}\n    </div>\n  );\n};\n\nexport default UpdatePost;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport App from './App';\nimport Create from './Create';\nimport SinglePost from './SinglePost';\nimport UpdatePost from './UpdatePost';\n\n\nconst Routes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={App} />\n        <Route path=\"/create\" exact component={Create} />\n        <Route path=\"/post/:slug\" exact component={SinglePost}/>\n        <Route path=\"/post/update/:slug\" exact component={UpdatePost}/>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// We won't use the following line for our app\n//reportWebVitals();\n"],"sourceRoot":""}